# Copyright 2025 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: "2"
run:
  modules-download-mode: readonly
linters:
  default: all
  disable:
    - govet # We already run with `make verify/govet`
    # We do not use
    - cyclop # Cyclomatic complexity
    - depguard # We don't guard against dependencies
    - dupl # Tracks code duplication. Too much duplication in tests. False positives in non-tests
    - exhaustruct # Explicitly instantiating all structs is painful for K8s structs
    - funlen # Long func names happen
    - gocognit # Cognitive complexity
    - gocyclo # Cyclomatic complexity
    - gomoddirectives # We need `replace` in `go.mod`
    - interfacebloat # No more than 10 interface methods
    - ireturn # Accept interfaces return concrete types
    - lll # Limit line length
    - maintidx # Maintainability index
    - mnd # Magic Number Detection. Many false positives
    - nestif # Don't allow too many nested if statements
    - nlreturn # Always have empty line before return
    - testpackage # Require separate test package to catch leaky unexported dependencies
    - varnamelen # Long var names happen
    - wsl # Too strict of a whitespace linter
    - wsl_v5 # Too strict
    # Consider adding in future
    - err113 # Do not create errors dynamically from scratch. Instead, wrap static (package-level) error.
    - wrapcheck # Same as err113
    - gochecknoglobals  # Do not allow global variables
    - godox # Do not allow TODOs
    - nonamedreturns # Need to nolint/refactor a few places our code
    - paralleltest # There are many tests that aren't parallelized
    - funcorder # Many of our existing files are out of order
    - noinlineerr # We use inline errors
    - embeddedstructfieldcheck # We have a few instances of this
  settings:
    revive:
      rules:
        # Using += 1 instead of ++ is fine
        - name: increment-decrement
          disabled: true
    staticcheck:
      # Dot importing ginkgo and gomega is standard practice
      dot-import-whitelist:
        - github.com/onsi/gomega
        - github.com/onsi/ginkgo/v2
    usetesting:
      # Turning check for os.MkdirTemp() off as t.TempDir() is not sufficient for mounter and sanity tests in their current state.
      os-mkdir-temp: false
  exclusions:
    # Exclude files that look auto-generated
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      # gosec recommends ignoring test files
      - linters:
          - gosec
        path: (.+)_test.go
      - linters:
          - gosec
        path: tests/e2e
      - linters:
          - gosec
        path: tests/sanity
formatters:
  enable:
    - gci
    - gofmt
    - goimports
  exclusions:
    generated: lax
